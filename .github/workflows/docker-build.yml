name: Build and Save Docker and CMake Artifacts

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker-container

      - name: Create cache directory
        run: mkdir -p /tmp/.buildx-cache

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Copy Dockerfile
        run: mkdir -p /tmp/docker && cp .devcontainer/Dockerfile /tmp/docker/Dockerfile

      - name: Build Docker image
        run: |
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache --tag my-docker-image --file /tmp/docker/Dockerfile --load .

      - name: Run CMake build in Docker container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace my-docker-image /bin/bash -c "
            mkdir -p build &&
            cd build &&
            cmake .. &&
            cmake --build . &&
            cp Googom /workspace/build/Googom"

      - name: Create tarball of the built executable
        run: |
          tar -czvf build/Googom.tar.gz -C build Googom

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cmake-build-artifacts
          path: build/Googom.tar.gz

      - name: Publish package
        if: github.event_name == 'push'
        run: |
          gh auth login --with-token ${{ secrets.GITHUB_TOKEN }}
          gh release create v${{ github.run_number }} build/Googom.tar.gz --notes "Automated build"
