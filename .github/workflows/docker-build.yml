name: Build, Package, and Publish

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker-container

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for existing Docker image
        id: check-image
        run: |
          if docker pull ghcr.io/${{ github.repository_owner }}/googom-dev:latest; then
            echo "Image exists"
            echo "IMAGE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Image does not exist"
            echo "IMAGE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        if: env.IMAGE_EXISTS == 'false'
        run: |
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache --tag ghcr.io/${{ github.repository_owner }}/googom-dev:latest --file .devcontainer/Dockerfile --push .

      - name: Run CMake build in Docker container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ghcr.io/${{ github.repository_owner }}/googom-dev:latest /bin/bash -c "
            mkdir -p build &&
            cd build &&
            cmake .. &&
            cmake --build . &&
            tar -czvf Googom.tar.gz Googom"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cmake-build-artifacts
          path: build/Googom.tar.gz

      - name: Publish package
        if: github.event_name == 'push'
        run: |
          gh auth login --with-token ${{ secrets.GITHUB_TOKEN }}
          gh release create v${{ github.run_number }} build/Googom.tar.gz --notes "Automated build"
