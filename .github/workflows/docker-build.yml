name: Build, Package, and Publish

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker-container

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: googom.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Check for existing Docker image
        id: check-image
        run: |
          if docker pull googom.azurecr.io/googom-dev:1.0; then
            echo "Image exists"
            echo "IMAGE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Image does not exist"
            echo "IMAGE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        if: env.IMAGE_EXISTS == 'false'
        run: |
          docker buildx build  --platform linux/amd64 --tag googom.azurecr.io/googom-dev:1.0 --file .devcontainer/Dockerfile --push .

      - name: Run CMake build in Docker container
        run: |
          docker run --platform linux/amd64 --rm -v ${{ github.workspace }}:/workspace -w /workspace googom.azurecr.io/googom-dev:1.0 /bin/bash -c "
            mkdir -p build &&
            cd build &&
            cmake .. &&
            cmake --build . &&
            tar -czvf Googom.tar.gz Googom"

      - name: Authenticate with GitHub CLI
        run: |
          echo ${{ secrets.G_TOKEN }} | gh auth login --with-token

      - name: Publish package
        if: github.event_name == 'push'
        run: |
            gh release create v${{ github.run_number }} build/Googom.tar.gz --notes "Automated build"